name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - "terraform/**/*.tf"

jobs:
  apply:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        directory:
          - "terraform/supabase"
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # https://github.com/jdx/mise-action
      - name: Install Mise dependencies
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          install: true
          install_args: "terraform"

      - name: Extract SOPS secrets
        run: |
          mkdir -p ~/.config/mise
          echo "${{ secrets.SOPS_FILE }}" >> ~/.config/mise/flutterkaigi.txt

      - name: Terraform format
        id: format
        run: terraform fmt -check

      - name: Check directory is not empty
        run: |
          if [ -z "$(ls -A)" ]; then
            echo "Directory is empty! Please add a Terraform file to the directory."
            exit 1
          fi

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format üñå\`${{ steps.format.outputs.stdout }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outputs.stdout }}\`

            <details>
            <summary>Terraform Apply</summary>
            \`\`\`
            ${steps.apply.outputs.stdout}
            \`\`\`
            </details>
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform checks in directory '${{ matrix.directory }}'\n` + output
            })
